{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchPokemonsAPI } from \"../Service/PokemonService\";\nexport const fetchPokemons = createAsyncThunk(\"pokemon/fetchPokemons\", async nextUrl => {\n  const response = await fetchPokemonsAPI(nextUrl);\n  return response;\n});\nconst initialState = {\n  pokemons: {\n    count: 0,\n    next: \"\",\n    results: []\n  }\n};\nconst pokemonsSlice = createSlice({\n  name: \"pokemons\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPokemons.fulfilled, (state, action) => {\n      if (state.pokemons.results.length > 0) {\n        state.pokemons = {\n          ...action.payload,\n          results: [...state.pokemons.results, ...action.payload.results]\n        };\n      } else {\n        state.pokemons = action.payload;\n      }\n    });\n  }\n});\nexport const pokemonsReducer = pokemonsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchPokemonsAPI","fetchPokemons","nextUrl","response","initialState","pokemons","count","next","results","pokemonsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","length","payload","pokemonsReducer","reducer"],"sources":["/Users/jeonghyejin/pokedex/src/Store/pokemonSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  fetchPokemonsAPI,\n  PokemonListResponse,\n} from \"../Service/PokemonService\";\n\nexport const fetchPokemons = createAsyncThunk(\n  \"pokemon/fetchPokemons\",\n  async (nextUrl?: string) => {\n    const response = await fetchPokemonsAPI(nextUrl);\n    return response;\n  }\n);\n\ninterface PokemonsState {\n  pokemons: PokemonListResponse;\n}\n\nconst initialState = {\n  pokemons: {\n    count: 0,\n    next: \"\",\n    results: [],\n  },\n} as PokemonsState;\n\nconst pokemonsSlice = createSlice({\n  name: \"pokemons\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(\n      fetchPokemons.fulfilled,\n      (state, action: PayloadAction<PokemonListResponse>) => {\n        if (state.pokemons.results.length > 0) {\n          state.pokemons = {\n            ...action.payload,\n            results: [...state.pokemons.results, ...action.payload.results],\n          };\n        } else {\n          state.pokemons = action.payload;\n        }\n      }\n    );\n  },\n});\n\nexport const pokemonsReducer = pokemonsSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,SACEC,gBAAgB,QAEX,2BAA2B;AAElC,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAC3C,uBAAuB,EACvB,MAAOI,OAAgB,IAAK;EAC1B,MAAMC,QAAQ,GAAG,MAAMH,gBAAgB,CAACE,OAAO,CAAC;EAChD,OAAOC,QAAQ;AACjB,CACF,CAAC;AAMD,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;IACRC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX;AACF,CAAkB;AAElB,MAAMC,aAAa,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,UAAU;EAChBN,YAAY;EACZO,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CACbb,aAAa,CAACc,SAAS,EACvB,CAACC,KAAK,EAAEC,MAA0C,KAAK;MACrD,IAAID,KAAK,CAACX,QAAQ,CAACG,OAAO,CAACU,MAAM,GAAG,CAAC,EAAE;QACrCF,KAAK,CAACX,QAAQ,GAAG;UACf,GAAGY,MAAM,CAACE,OAAO;UACjBX,OAAO,EAAE,CAAC,GAAGQ,KAAK,CAACX,QAAQ,CAACG,OAAO,EAAE,GAAGS,MAAM,CAACE,OAAO,CAACX,OAAO;QAChE,CAAC;MACH,CAAC,MAAM;QACLQ,KAAK,CAACX,QAAQ,GAAGY,MAAM,CAACE,OAAO;MACjC;IACF,CACF,CAAC;EACH;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGX,aAAa,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}