{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchPokemonDetailAPI } from \"../Service/PokemonService\";\nexport const fetchPokemonDetail = createAsyncThunk(\"pokemon/fetchPokemonDetail\", async name => {\n  const response = await fetchPokemonDetailAPI(name);\n  return response;\n}, {\n  condition: (name, {\n    getState\n  }) => {\n    const {\n      pokemonDetail\n    } = getState();\n    const pokemon = pokemonDetail.pokemonDetails[name];\n    return !pokemon;\n  }\n});\nconst initialState = {\n  pokemonDetails: {}\n};\nconst pokemonDetailSlice = createSlice({\n  name: \"pokemonDetail\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPokemonDetail.fulfilled, (state, action) => {\n      state.pokemonDetails = {\n        ...state.pokemonDetails,\n        [action.payload.name]: action.payload\n      };\n    });\n  }\n});\nexport const pokemonDetailReducer = pokemonDetailSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchPokemonDetailAPI","fetchPokemonDetail","name","response","condition","getState","pokemonDetail","pokemon","pokemonDetails","initialState","pokemonDetailSlice","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","pokemonDetailReducer","reducer"],"sources":["/Users/jeonghyejin/pokedex/src/Store/pokemondetailSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  fetchPokemonDetailAPI,\n  PokemonDetailType,\n} from \"../Service/PokemonService\";\nimport { RootState } from \".\";\n\nexport const fetchPokemonDetail = createAsyncThunk(\n  \"pokemon/fetchPokemonDetail\",\n  async (name: string) => {\n    const response = await fetchPokemonDetailAPI(name);\n    return response;\n  },\n  {\n    condition: (name, { getState }) => {\n      const { pokemonDetail } = getState() as RootState;\n      const pokemon = pokemonDetail.pokemonDetails[name];\n\n      return !pokemon;\n    },\n  }\n);\n\ninterface PokemonDetailState {\n  pokemonDetails: Record<string, PokemonDetailType>;\n}\n\nconst initialState = {\n  pokemonDetails: {},\n} as PokemonDetailState;\n\nconst pokemonDetailSlice = createSlice({\n  name: \"pokemonDetail\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(\n      fetchPokemonDetail.fulfilled,\n      (state, action: PayloadAction<PokemonDetailType>) => {\n        state.pokemonDetails = {\n          ...state.pokemonDetails,\n          [action.payload.name]: action.payload,\n        };\n      }\n    );\n  },\n});\n\nexport const pokemonDetailReducer = pokemonDetailSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,SACEC,qBAAqB,QAEhB,2BAA2B;AAGlC,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAChD,4BAA4B,EAC5B,MAAOI,IAAY,IAAK;EACtB,MAAMC,QAAQ,GAAG,MAAMH,qBAAqB,CAACE,IAAI,CAAC;EAClD,OAAOC,QAAQ;AACjB,CAAC,EACD;EACEC,SAAS,EAAEA,CAACF,IAAI,EAAE;IAAEG;EAAS,CAAC,KAAK;IACjC,MAAM;MAAEC;IAAc,CAAC,GAAGD,QAAQ,CAAC,CAAc;IACjD,MAAME,OAAO,GAAGD,aAAa,CAACE,cAAc,CAACN,IAAI,CAAC;IAElD,OAAO,CAACK,OAAO;EACjB;AACF,CACF,CAAC;AAMD,MAAME,YAAY,GAAG;EACnBD,cAAc,EAAE,CAAC;AACnB,CAAuB;AAEvB,MAAME,kBAAkB,GAAGX,WAAW,CAAC;EACrCG,IAAI,EAAE,eAAe;EACrBO,YAAY;EACZE,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CACbb,kBAAkB,CAACc,SAAS,EAC5B,CAACC,KAAK,EAAEC,MAAwC,KAAK;MACnDD,KAAK,CAACR,cAAc,GAAG;QACrB,GAAGQ,KAAK,CAACR,cAAc;QACvB,CAACS,MAAM,CAACC,OAAO,CAAChB,IAAI,GAAGe,MAAM,CAACC;MAChC,CAAC;IACH,CACF,CAAC;EACH;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,oBAAoB,GAAGT,kBAAkB,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}