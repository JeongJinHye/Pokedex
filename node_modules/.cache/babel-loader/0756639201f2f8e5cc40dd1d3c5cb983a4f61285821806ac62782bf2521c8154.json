{"ast":null,"code":"import axios from \"axios\";\nconst remote = axios.create();\nexport const fetchPokemonsAPI = async nextUrl => {\n  const requestUrl = nextUrl ? nextUrl : \"https://pokeapi.co/api/v2/pokemon\";\n  const response = await remote.get(requestUrl);\n  return response.data;\n};\nexport const fetchPokemonDetailAPI = async name => {\n  try {\n    var _species$names$find$n, _species$names$find;\n    const pokemonDetailUrl = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${name}`;\n    const response = await remote.get(pokemonDetailUrl);\n    const speciesResponse = await remote.get(pokemonSpeciesUrl);\n    const detail = response.data;\n    const species = speciesResponse.data;\n    const koreanName = (_species$names$find$n = (_species$names$find = species.names.find(item => item.language.name === \"ko\")) === null || _species$names$find === void 0 ? void 0 : _species$names$find.name) !== null && _species$names$find$n !== void 0 ? _species$names$find$n : detail.name;\n    return {\n      id: detail.id,\n      name: detail.name,\n      koreanName: koreanName,\n      color: species.color.name,\n      height: detail.height / 10,\n      weight: detail.weight / 10,\n      types: detail.types.map(item => item.type.name),\n      images: {\n        frontDefault: detail.sprites.front_default,\n        dreamWorldFront: detail.sprites.other.dream_world.front_default,\n        officialArtworkFront: detail.sprites.other[\"official-artwork\"].front_default\n      },\n      baseStats: detail.stats.map(item => {\n        return {\n          name: item.stat.name,\n          value: item.base_stat\n        };\n      })\n    };\n  } catch (error) {\n    console.error(\"Error fetching Pokemon details\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","remote","create","fetchPokemonsAPI","nextUrl","requestUrl","response","get","data","fetchPokemonDetailAPI","name","_species$names$find$n","_species$names$find","pokemonDetailUrl","pokemonSpeciesUrl","speciesResponse","detail","species","koreanName","names","find","item","language","id","color","height","weight","types","map","type","images","frontDefault","sprites","front_default","dreamWorldFront","other","dream_world","officialArtworkFront","baseStats","stats","stat","value","base_stat","error","console"],"sources":["/Users/jeonghyejin/Documents/플젝/React/pokedex 2/src/Service/PokemonService.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst remote = axios.create();\n\nexport interface PokemonListResponse {\n  count: number;\n  next: string;\n  results: {\n    name: string;\n    url: string;\n  }[];\n}\n\nexport const fetchPokemonsAPI = async (nextUrl?: string) => {\n  const requestUrl = nextUrl ? nextUrl : \"https://pokeapi.co/api/v2/pokemon\";\n\n  const response = await remote.get(requestUrl);\n\n  return response.data;\n};\n\ninterface PokemonListResponseType {\n  id: number;\n  weight: number;\n  height: number;\n  name: string;\n  types: {\n    type: {\n      name: string;\n    };\n  }[];\n  sprites: {\n    front_default: string;\n    other: {\n      dream_world: {\n        front_default: string;\n      };\n      \"official-artwork\": {\n        front_default: string;\n      };\n    };\n  };\n  stats: {\n    base_stat: number;\n    stat: {\n      name: string;\n    };\n  }[];\n}\n\ninterface PokemonSpeciesResponseType {\n  color: {\n    name: string;\n  };\n  names: {\n    name: string;\n    language: {\n      name: string;\n    };\n  }[];\n}\n\nexport interface PokemonDetailType {\n  id: number;\n  weight: number;\n  height: number;\n  name: string;\n  koreanName: string;\n  color: string;\n  types: string[];\n  images: {\n    frontDefault: string;\n    dreamWorldFront: string;\n    officialArtworkFront: string;\n  };\n  baseStats: {\n    name: string;\n    value: number;\n  }[];\n}\n\nexport const fetchPokemonDetailAPI = async (\n  name: string\n): Promise<PokemonDetailType> => {\n  try {\n    const pokemonDetailUrl = `https://pokeapi.co/api/v2/pokemon/${name}`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${name}`;\n    const response = await remote.get<PokemonListResponseType>(\n      pokemonDetailUrl\n    );\n    const speciesResponse = await remote.get<PokemonSpeciesResponseType>(\n      pokemonSpeciesUrl\n    );\n    const detail = response.data;\n    const species = speciesResponse.data;\n\n    const koreanName =\n      species.names.find((item) => item.language.name === \"ko\")?.name ??\n      detail.name;\n\n    return {\n      id: detail.id,\n      name: detail.name,\n      koreanName: koreanName,\n      color: species.color.name,\n      height: detail.height / 10,\n      weight: detail.weight / 10,\n      types: detail.types.map((item) => item.type.name),\n      images: {\n        frontDefault: detail.sprites.front_default,\n        dreamWorldFront: detail.sprites.other.dream_world.front_default,\n        officialArtworkFront:\n          detail.sprites.other[\"official-artwork\"].front_default,\n      },\n      baseStats: detail.stats.map((item) => {\n        return {\n          name: item.stat.name,\n          value: item.base_stat,\n        };\n      }),\n    };\n  } catch (error) {\n    console.error(\"Error fetching Pokemon details\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC;AAW7B,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,OAAgB,IAAK;EAC1D,MAAMC,UAAU,GAAGD,OAAO,GAAGA,OAAO,GAAG,mCAAmC;EAE1E,MAAME,QAAQ,GAAG,MAAML,MAAM,CAACM,GAAG,CAACF,UAAU,CAAC;EAE7C,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AA8DD,OAAO,MAAMC,qBAAqB,GAAG,MACnCC,IAAY,IACmB;EAC/B,IAAI;IAAA,IAAAC,qBAAA,EAAAC,mBAAA;IACF,MAAMC,gBAAgB,GAAG,qCAAqCH,IAAI,EAAE;IACpE,MAAMI,iBAAiB,GAAG,6CAA6CJ,IAAI,EAAE;IAC7E,MAAMJ,QAAQ,GAAG,MAAML,MAAM,CAACM,GAAG,CAC/BM,gBACF,CAAC;IACD,MAAME,eAAe,GAAG,MAAMd,MAAM,CAACM,GAAG,CACtCO,iBACF,CAAC;IACD,MAAME,MAAM,GAAGV,QAAQ,CAACE,IAAI;IAC5B,MAAMS,OAAO,GAAGF,eAAe,CAACP,IAAI;IAEpC,MAAMU,UAAU,IAAAP,qBAAA,IAAAC,mBAAA,GACdK,OAAO,CAACE,KAAK,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAACZ,IAAI,KAAK,IAAI,CAAC,cAAAE,mBAAA,uBAAzDA,mBAAA,CAA2DF,IAAI,cAAAC,qBAAA,cAAAA,qBAAA,GAC/DK,MAAM,CAACN,IAAI;IAEb,OAAO;MACLa,EAAE,EAAEP,MAAM,CAACO,EAAE;MACbb,IAAI,EAAEM,MAAM,CAACN,IAAI;MACjBQ,UAAU,EAAEA,UAAU;MACtBM,KAAK,EAAEP,OAAO,CAACO,KAAK,CAACd,IAAI;MACzBe,MAAM,EAAET,MAAM,CAACS,MAAM,GAAG,EAAE;MAC1BC,MAAM,EAAEV,MAAM,CAACU,MAAM,GAAG,EAAE;MAC1BC,KAAK,EAAEX,MAAM,CAACW,KAAK,CAACC,GAAG,CAAEP,IAAI,IAAKA,IAAI,CAACQ,IAAI,CAACnB,IAAI,CAAC;MACjDoB,MAAM,EAAE;QACNC,YAAY,EAAEf,MAAM,CAACgB,OAAO,CAACC,aAAa;QAC1CC,eAAe,EAAElB,MAAM,CAACgB,OAAO,CAACG,KAAK,CAACC,WAAW,CAACH,aAAa;QAC/DI,oBAAoB,EAClBrB,MAAM,CAACgB,OAAO,CAACG,KAAK,CAAC,kBAAkB,CAAC,CAACF;MAC7C,CAAC;MACDK,SAAS,EAAEtB,MAAM,CAACuB,KAAK,CAACX,GAAG,CAAEP,IAAI,IAAK;QACpC,OAAO;UACLX,IAAI,EAAEW,IAAI,CAACmB,IAAI,CAAC9B,IAAI;UACpB+B,KAAK,EAAEpB,IAAI,CAACqB;QACd,CAAC;MACH,CAAC;IACH,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}